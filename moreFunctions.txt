//LOCALIZATION
var loadMap = function () {

    map.locate({setView: true, watch: true})
        .on('locationfound', function(e){
            var marker = L.marker([e.latitude, e.longitude]).bindPopup('Você está aqui!');
            var circle = L.circle([e.latitude, e.longitude], e.accuracy/2, {
                weight: 1,
                color: 'blue',
                fillColor: '#cacaca',
                fillOpacity: 0.2
            });
            map.addLayer(marker);
            map.addLayer(circle);
        })
       .on('locationerror', function(e){
            console.log(e);
            alert("Permissão negada");
        });
};

loadMap();


// GET LAT LONG
map.on('click', function(e) {
    alert("Lon, Lat : " + e.latlng.lng + " " + e.latlng.lat)
}); 


// SIMPLE MARKERS
function addGeoJsonLayerMarkers(data) {
    var markers = L.geoJSON(false, {
        onEachFeature: function (feature, layer) {
            feature.layer = layer;
            layer.bindPopup(feature.properties.nome);
        }
    });
    markers.addData(data).addTo(map);
    controlLayers.addOverlay(markers, 'Pontos');
}


//LOAD JSON WITH PURE JS
function loadJSON(path, success, error) {
    var xhr = new XMLHttpRequest();
    xhr.onreadystatechange = function () {
        if (xhr.readyState === XMLHttpRequest.DONE) {
            if (xhr.status === 200) {
                if (success) {
                    success(JSON.parse(xhr.responseText));
                }
            } else {
                if (error) {
                    error(xhr);
                }
            }
        }
    };
    xhr.open("GET", path, true);
    xhr.send();
}



//Add Fuse Search Control
var options = {
    position: 'topright',
    title: 'Busca',
    panelTitle: 'Buscador',
    placeholder: 'Exemplo: IFPI',
    maxResultLength: 10,
    threshold: 0.5,
    showInvisibleFeatures: true,
    caseSensitive: false,
    showResultFct: function (feature, container) {
        "use strict";
        props = feature.properties;
        var name = L.DomUtil.create('b', null, container);
        name.innerHTML = '<br/>' + props.nome;
        container.appendChild(L.DomUtil.create('br', null, container));
    }
};

var searchCtrl = L.control.fuseSearch(options);
map.addControl(searchCtrl);